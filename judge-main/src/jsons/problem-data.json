{
  "pid": 23,
  "title": "Summarize to the Power of Two",
  "tags": "brute force,greedy,implementation",
  "difficulty": 5,
  "statement": "\n> [!NOTE]\n> Useful information that users should know, even when skimming content\n\nA sequence $a_1, a_2, \\dots, a_n$ is called good if, for each element $a_i$, there exists an element $a_j$ ($i \\ne j$) such that $a_i+a_j$ is a power of two (that is, $2^d$ for some non-negative integer $d$).\n\nFor example, the following sequences are good:\n\n* $[5, 3, 11]$ (for example, for $a_1=5$ we can choose $a_2=3$. Note that their sum is a power of two. Similarly, such an element can be found for $a_2$ and $a_3$),\n* $[1, 1, 1, 1023]$,\n* $[7, 39, 89, 25, 89]$,\n* $[]$.\n\nNote that, by definition, an empty sequence (with a length of $0$) is good.\n\nFor example, the following sequences are not good:\n\n* $[16]$ (for $a_1=16$, it is impossible to find another element $a_j$ such that their sum is a power of two),\n* $[4, 16]$ (for $a_1=4$, it is impossible to find another element $a_j$ such that their sum is a power of two),\n* $[1, 3, 2, 8, 8, 8]$ (for $a_3=2$, it is impossible to find another element $a_j$ such that their sum is a power of two).\n\nYou are given a sequence $a_1, a_2, \\dots, a_n$. What is the minimum number of elements you need to remove to make it good? You can delete an arbitrary set of elements.\n\n",
  "in_spec": "InputThe first line contains the integer $n$ ($1 \\le n \\le 120000$) â€” the length of the given sequence.\n\nThe second line contains the sequence of integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$).\n\n",
  "out_spec": "OutputPrint the minimum number of elements needed to be removed from the given sequence in order to make it good. It is possible that you need to delete all $n$ elements, make it empty, and thus get a good sequence.\n\n",
  "sample_tests": "[{\"input\": \"64 7 1 5 4 9\", \"output\": \"1\"}, {\"input\": \"51 2 3 4 5\", \"output\": \"2\"}, {\"input\": \"116\", \"output\": \"1\"}, {\"input\": \"41 1 1 1023\", \"output\": \"0\"}]",
  "hints": "[\"In the first example, it is enough to delete one element $a_4=5$. The remaining elements form the sequence $[4, 7, 1, 4, 9]$, which is good.\\n\\n\", \"This is hints 2\"]",
  "solution": "#include <cstdio>\n#include <map>\ntypedef long long ll;\n\nint main(){\n\n    ll n; scanf(\"%lld\", &n);\n    std::map<ll, ll> m;\n    ll rem(0);\n    for(ll p = 0; p < n; p++){ll x; scanf(\"%lld\", &x); ++m[x];}\n    for(std::map<ll, ll>::iterator it = m.begin(); it != m.end(); it++){\n        ll x = it->first;\n        ll cnt = it->second;\n\n        rem += cnt;\n        for(ll w = 1; w < 3e9; w *= 2){\n            if((w > x) && m.count(w - x) && m[w - x] >= 1 + (w == 2 * x)){rem -= cnt; break;}\n        }\n\n        //printf(\"%lld %lld -> %lld\\n\", x, cnt, rem);\n    }\n\n    printf(\"%lld\\n\", rem);\n\n    return 0;\n}\n",
  "solution_lid": 1,
  "time_limit": 3000,
  "mem_limit": 256
}
